<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

   <!-- MVC패턴 사용하고 싶으면 즉, @Controller annotation을 사용하고 싶으면 적어야 함-->
    <mvc:annotation-driven/>

    <!-- annotation을 사용하고 싶으면 적어야 함 -->
    <context:annotation-config/>

    <!-- annotation으로 bean 등록할 class들을 스캔뜨는 시작 패키지를 설정 -->
    <context:component-scan base-package="com.jimin.spring"/>

    <mvc:resources mapping="/res/**" location="/res/"/>
    <mvc:resources mapping="/img/**" location="file:///C:/Users/hello/springImg/"/>
    <!-- res/** 아래로 몇차 주소든 모든 값을 다 불러들일 수 있다는 의미
         주소창에 mapping[연결]으로 들어가고, 파일 여는 것은 location
         경로[폴더명]를 다르게 할 수는 있지만 맞추는 것이 좋음 -->
    <!-- /res나 /img의 경우에는 servlet이 잡지않도록 경로를 /res/와 c:/Users .. 로 지정해준 것 -->


    <mvc:interceptors>
        <mvc:interceptor> <!-- 모든 interceptor를 거치겠다 라는 의미 -->
            <mvc:mapping path="/**"/>
<!--            <mvc:mapping path="/board/writeMod"/>-->
<!--            <mvc:mapping path="/board/favList"/>-->
<!--            <mvc:mapping path="/user/profile"/>-->
            <bean class="com.jimin.spring.AuthCheckInterceptor" />
        </mvc:interceptor>
    </mvc:interceptors>


    <!-- 사용할 파일명을 완성해주는 객체 / open jsp 역할 -->
    <bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <!-- InternalResourceViewResolver : web application의 war파일 내에 포함된 view template(jsp)을 찾아서 열어줌,
            경로는 논리적view이름의 접두사와 접미사를 붙여 구성 / UrlBasedViewResolver가 부모고 기능이 더 적음 -->
        <property name="prefix" value="/WEB-INF/views/"/> <!-- prefix : 앞에 붙이는 -->
        <property name="suffix" value=".jsp"/> <!-- suffix : 뒤에 붙이는 -->
        <property name="order" value="2"/> <!-- 안적어줘도 자동으로 2순위로 넣어줌, tiles 순서를 바꿔준다. -->
    </bean>

    <bean class="org.springframework.web.servlet.view.UrlBasedViewResolver">
        <!-- 특별한 mapping 정보없이 view이름을 URL로 사용, view 이름과 실제 view resource와의 이름이 같을 때 사용가능 -->
        <property name="viewClass" value="org.springframework.web.servlet.view.tiles3.TilesView"/>
        <property name="order" value="1"/>
    </bean>

    <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter"/>

    <!-- tiles의 설정파일을 loading시키기 위해 받는 값 [tiles실행을 위해 환경설정 해주는애] -->
    <bean class="org.springframework.web.servlet.view.tiles3.TilesConfigurer">
        <property name="definitions"> <!-- Tilesconfigurer[class명]가 객체화될 때 definition[멤버필드]이름을 가진애의 타입이 list다. -->
            <list>
                <value>/WEB-INF/tiles.xml</value>
            </list>
        </property>
    </bean>


</beans>